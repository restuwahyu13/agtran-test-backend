version: '3.8'
services:
# WEBAPP SERVICE
  webapp:
    container_name: client-app
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./client/Dockerfile.client
    ports:
      - 8080:8080
    volumes:
      - .:/usr/src/client
      - /usr/src/client/node_modules
    networks:
      - node_networks
# WEB SERVER SERVICE
  webserver:
    container_name: server-app
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./server/Dockerfile.server
    ports:
      - 3000:3000
    depends_on:
      - db
      - storage
    volumes:
      - .:/usr/src/server
      - /usr/src/server/node_modules
    networks:
      - node_networks
# DATABASE SERVICE
  db:
    image: postgres:13-alpine
    container_name: pg-database
    restart: unless-stopped
    ports:
    - 5432:5432
    environment:
      - POSTGRES_USER=restuwahyu13
      - POSTGRES_PASSWORD=restuwahyu13
      - POSTGRES_DB=auth
    volumes:
      - db:/var/lib/postgresql/data:delegated
    networks:
      - node_networks
# STORAGE SERVICE
  storage:
    image: redis:6.2.1-alpine
    container_name: redis-storage
    restart: unless-stopped
    ports:
    - 6379:6379
    volumes:
      - storage:/var/lib/redis/data:delegated
    networks:
      - node_networks
## CREATE DOCKER NETWORK
networks:
  node_networks:
## CREATE DOCKER VOLUME
volumes:
  db:
  storage: