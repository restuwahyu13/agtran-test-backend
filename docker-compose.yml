version: '3'
services:
# WEBAPP SERVICE
  webapp:
    restart: unless-stopped
    build: client
    ports:
      - 8080:8080
    volumes:
      - /usr/src/client
      - /usr/src/client/node_modules
    networks:
      - node_networks
# WEB SERVER SERVICE
  webserver:
    restart: unless-stopped
    build: server
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=3000
      - URL_PROD=http://localhost:3000/api/v1
      - PG_URI=postgres://restuwahyu13:restuwahyu13@db:5432/auth
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ACCESS_TOKEN_SECRET=cd3ba344f7abb066c80f192818f10e4126735658
        REFRESH_TOKEN_SECRET=bda671e118c52d0bc4e475604f630e6f4e91fefe
      - SESSION_SECRET=abb066c80f1HGU0cGaROa7ROBekla6BuNQ
      - SG_API_KEY=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
      - GOOGLE_ID=279565459220-8caqvsn1pvd5hjrsgb34on1qolo0lj9d.apps.googleusercontent.com
      - GOOGLE_SECRET=dHqEQWB_DfknjYGopaMowkUu
    ports:
      - 3000:3000
    depends_on:
      - webapp
      - db
      - redis
    volumes:
      - /usr/src/server
      - /usr/src/server/node_modules
    networks:
      - node_networks
# DATABASE SERVICE
  db:
    image: postgres:latest
    restart: unless-stopped
    ports:
    - 5432:5432
    environment:
      - POSTGRES_USER=restuwahyu13
      - POSTGRES_PASSWORD=restuwahyu13
      - POSTGRES_DB=auth
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - node_networks
# STORAGE SERVICE
  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
    - 6379:6379
    volumes:
      - redis:/var/lib/redis/data
    networks:
      - node_networks
# CREATE DOCKER NETWORK
networks:
  node_networks:
# CREATE DOCKER VOLUME
volumes:
  db:
  redis: