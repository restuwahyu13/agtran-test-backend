version: '3.8'
services:
  webserver:
    container_name: express_restapi
    restart: unless-stopped
    build: .
    command: sh -c "sleep 3 && npm start"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - URL_PROD=http://localhost:3000
      - PG_URI_PROD=postgres://restuwahyu13:restuwahyu13@db:5432/auth
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ACCESS_TOKEN_SECRET=cd3ba344f7abb066c80f192818f10e4126735658
      - REFRESH_TOKEN_SECRET=bda671e118c52d0bc4e475604f630e6f4e91fefe
      - SESSION_SECRET=abb066c80f1HGU0cGaROa7ROBekla6BuNQ
      - SG_API_KEY=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
      - GOOGLE_ID=279565459220-8caqvsn1pvd5hjrsgb34on1qolo0lj9d.apps.googleusercontent.com
      - GOOGLE_SECRET=dHqEQWB_DfknjYGopaMowkUu
    ports:
      - 3000:3000
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - node_networks
  # DATABASE SERVICE
  db:
    container_name: pg_database
    restart: unless-stopped
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=restuwahyu13
      - POSTGRES_PASSWORD=restuwahyu13
      - POSTGRES_DB=auth
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - node_networks
  # STORAGE SERVICE
  redis:
    container_name: redis_storage
    restart: unless-stopped
    image: redis:6.2-alpine
    ports:
      - 6379:6379
    volumes:
      - rddata:/var/lib/redis/data
    networks:
      - node_networks
# CREATE DOCKER VOLUME
volumes:
  pgdata:
  rddata:
# CREATE DOCKER NETWORK
networks:
  node_networks:
